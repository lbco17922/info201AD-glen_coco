source(propublica_key.R)
print(pro_key)
source(propublica_key.R)
print(pro_key)
source(propublica_key.R)
source(propublica_key.R)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
library(httr)
library(rjson)
library(jsonlite)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
print(pro_key)
function_one <- function(chamber, state) {
if(missing(chamber)) {
chamber = "house"
}
if(missing(state)) {
state = "WA"
}
chamber = "senate"
state = "WA"
endpoint <- paste("https://api.propublica.org/congress/v1/members/",
chamber, "/", state, "/current.json")
data <- GET(endpoint,
add_headers("X-API-Key" = pro_key)
)
data_text <- content(data, type = "text", encoding = "UTF-8")
data_list <- fromJSON(data_text)
return(data_list)
}
x <- function_one("house", "WA")
View(x)
function_one <- function(chamber, state) {
if(missing(chamber)) {
chamber = "house"
}
if(missing(state)) {
state = "WA"
}
chamber = "senate"
state = "WA"
endpoint <- paste("https://api.propublica.org/congress/v1/members/",
chamber, "/", state, "/current.json", sep = "")
data <- GET(endpoint,
add_headers("X-API-Key" = pro_key)
)
data_text <- content(data, type = "text", encoding = "UTF-8")
data_list <- fromJSON(data_text)
return(data_list)
}
x <- function_one("house", "WA")
View(x)
y <- function_one()
View(y)
y <- function_one("house", "CA")
View(y)
y <- function_one("house", "CA")
View(y)
x <- function_one()
y <- function_one("house", "CA")
View(y)
View(x)
x <- function_one()
y <- function_one("house", "CA")
View(y)
x <- function_one("house", "WA")
y <- function_one("house", "CA")
View(y)
View(x)
library(httr)
library(rjson)
library(jsonlite)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
print(pro_key)
function_one <- function(chamber, state) {
if(missing(chamber)) {
chamber = "house"
}
if(missing(state)) {
state = "WA"
}
endpoint <- paste("https://api.propublica.org/congress/v1/members/",
chamber, "/", "CA" , "/current.json", sep = "")
data <- GET(endpoint,
add_headers("X-API-Key" = pro_key)
)
data_text <- content(data, type = "text", encoding = "UTF-8")
data_list <- fromJSON(data_text)
return(data_list)
}
x <- function_one("house", "WA")
y <- function_one("house", "CA")
View(y)
library(httr)
library(rjson)
library(jsonlite)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
print(pro_key)
function_one <- function(chamber, state) {
if(missing(chamber)) {
chamber = "house"
}
if(missing(state)) {
state = "WA"
}
endpoint <- paste("https://api.propublica.org/congress/v1/members/",
chamber, "/", state, "/current.json", sep = "")
data <- GET(endpoint,
add_headers("X-API-Key" = pro_key)
)
data_text <- content(data, type = "text", encoding = "UTF-8")
data_list <- fromJSON(data_text)
return(data_list)
}
x <- function_one("house", "WA")
y <- function_one("house", "CA")
View(y)
View(x)
View(x)
library(httr)
library(rjson)
library(jsonlite)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
print(pro_key)
function_one <- function(chamber, state) {
if(missing(chamber)) {
chamber = "house"
}
if(missing(state)) {
state = "WA"
}
endpoint <- paste("https://api.propublica.org/congress/v1/members/",
chamber, "/", state, "/current.json", sep = "")
data <- GET(endpoint,
add_headers("X-API-Key" = pro_key)
)
data_text <- content(data, type = "text", encoding = "UTF-8")
data_list <- fromJSON(data_text)
return(data_list)
}
y <- function_one("house", "NY")
pro_key <- "hiLCTWMgOJ0k2Qp3qr0zirWsJTGqaq2OTkwzVDju"
y <- function_one("house", "NY")
View(y)
e <- function_one("house", "CA")
View(e)
z <- function_one()
View(z)
remm <- function_one("house", "WA")
View(remm)
setwd("~/lionel_info201hw01/a7--lbco17922")
source(propublica_key.R)
print(pro_key)
runApp('~/lionel_info201hw01/shiny-project/nytimes')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
HappyHour_ui <- fluidPage(
titlePanel("Relationship Between Alcohol Consumption and Happiness"),
sidebarLayout(
sidebarPanel("sidebar panel test 01"),
# Main Panel
mainPanel(
navbarPage("testing123"),
tabsetPanel(
# Defining propertires of tabset panel
type = "tab", id = "nav_bar",
# ----- Tab panel for general summary: -----
tabPanel("Summary"),
# ----- Tab panel for the Bar Plot Visual-----
tabPanel("Bar Plot Visual"),
# ----- Tab panel for the Choropleth Visual -----
tabPanel("Choropleth Visual"),
# ----- Tab panel for the conclusions on data -----
tabPanel("Conclusions")
)
)
)
)
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
install.packages("plotly")
library(shiny)
library(plotly)
HappyHour_ui <- fluidPage(
titlePanel("Relationship Between Alcohol Consumption and Happiness"),
# Main Panel
mainPanel(
navbarPage("The Navbar",
# ----- Tab panel for general summary: -----
tabPanel("Summary",
titlePanel("Summary of the Project"),
tags$div(
"What is the Problem?:", tags$br(),
"Alcohol can often be seen as the source of depression and other mental illnesses, yet, many rely on its effects to relieve stress and bring themselves joy. As such, our group aims to understand the unique relationship between happiness levels and alcohol consumption by studying the “happiness” data collected throughout various countries as well as the access they have to alcohol.
Problem Situation: The primary stakeholders for our project would most likely be current or potential consumers of alcohol as they can utilize our data to make decisions on whether or not frequent/excessive alcohol consumption will help their moods in the long run. A possible secondary stakeholder may be governments deciding how to regulate alcohol sales within their respective countries. A final possible secondary stakeholder may be alcohol companies seeing where their businesses would perform the most effectively.
Why does it matter?: Leading back to the problem statement, this matters because our group wishes to find out if alcohol actually is the cause of an improvement in mood. Our research will provide basic evidence for alcohol companies and governments in their decisions on how to regulate alcohol sales for the benefit of the public or even whether or not it would be successful in various countries."
)
),
# ----- Tab panel for the Bar Plot Visual-----
tabPanel("Bar Plot Visual"),
# ----- Tab panel for the Choropleth Visual -----
tabPanel("Choropleth Visual"),
# ----- Tab panel for the conclusions on data -----
tabPanel("Conclusions")
)
)
)
runApp('~/lionel_info201hw01/info201AD-glen_coco/HappyHour/HappyHour_app.R')
library(plotly)
library(shiny)
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
}
library(shiny)
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
}
View(HappyHour_server)
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
setwd("~/lionel_info201hw01/info201AD-glen_coco/HappyHour")
library(shiny)
setwd("~/lionel_info201hw01/info201AD-glen_coco/HappyHour")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
}
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
View(hh_data)
library(shiny)
# setwd("~/lionel_info201hw01/info201AD-glen_coco/HappyHour")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("/data/HappinessAlcoholConsumption.csv")
}
setwd("~/lionel_info201hw01/info201AD-glen_coco/HappyHour")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
}
library(shiny)
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
library(shiny)
source("Data_Visualizations/HH_Scatter.R")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv")
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
library(shiny)
source("Data_Visualizations/HH_Scatter.R")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv", stringsAsFactors = FALSE)
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
runApp('HappyHour_app.R')
plot_ly(data = hh_data, x = ~HappinessScore, y = ~GDP_PerCapita)
library(plotly)
draw_hh_scatter <- function(hh_data) {
scatter_plot <- plot_ly(data = hh_data, x = ~HappinessScore, y = ~GDP_PerCapita)
return(scatter_plot)
}
runApp('HappyHour_app.R')
library(dplyr)
hh_data_modified <- select(hh_data)
View(hh_data_modified)
hh_data_modified <- hh_data
draw_hh_scatter <- function(hh_data) {
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita = Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)
scatter_plot <- plot_ly(data = hh_data, x = ~HappinessScore, y = ~GDP_PerCapita)
return(scatter_plot)
}
View(hh_data_modified)
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita = Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)
View(hh_data_modified)
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita = (Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)/10)
scatter_plot <- plot_ly(data = hh_data, x = ~HappinessScore, y = ~GDP_PerCapita)
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita = (Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)/100)
scatter_plot <-  hh_data_modified %>%
plot_ly(type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
scatter_plot <- hh_data_modified %>%
plot_ly(type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
runApp('HappyHour_app.R')
scatter_plot <- hh_data_modified %>%
plot_ly(type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
draw_hh_scatter <- function(hh_data) {
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita =
(Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)/100)
scatter_plot <- hh_data_modified %>%
plot_ly(
type = 'scatter',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
}
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
source("HappyHour_server.R")
cxcx <- hh_data
scatter_choices <- unique(hh_data$Region)
scatter_choices <- unique(hh_data[,Region])
scatter_choices <- hh_data$Region
scatter_choices <- hh_data$Region
scatter_choices <- select(hh_data, Region)
View(scatter_choices)
scatter_choices <- unique(select(hh_data, Region))
View(scatter_choices)
scatter_choices <- c(unique(select(hh_data, Region)))
View(scatter_choices)
runApp('HappyHour_app.R')
HappyHour_ui <- fluidPage(
titlePanel("Relationship Between Alcohol Consumption and Happiness"),
# Main Panel
mainPanel(
navbarPage("The Navbar",
# ----- Tab panel for general summary: -----
tabPanel("Summary",
titlePanel("Summary of the Project"),
tags$div(
"What is the Problem?:", tags$br(),
"Alcohol can often be seen as the source of depression and other mental illnesses, yet, many rely on its effects to relieve stress and bring themselves joy. As such, our group aims to understand the unique relationship between happiness levels and alcohol consumption by studying the “happiness” data collected throughout various countries as well as the access they have to alcohol.
Problem Situation: The primary stakeholders for our project would most likely be current or potential consumers of alcohol as they can utilize our data to make decisions on whether or not frequent/excessive alcohol consumption will help their moods in the long run. A possible secondary stakeholder may be governments deciding how to regulate alcohol sales within their respective countries. A final possible secondary stakeholder may be alcohol companies seeing where their businesses would perform the most effectively.
Why does it matter?: Leading back to the problem statement, this matters because our group wishes to find out if alcohol actually is the cause of an improvement in mood. Our research will provide basic evidence for alcohol companies and governments in their decisions on how to regulate alcohol sales for the benefit of the public or even whether or not it would be successful in various countries."
)
),
# ----- Tab panel for the Bar Plot Visual-----
tabPanel("Scatter Plot Visual",
mainPanel(
plotlyOutput("general_scatter")
),
sidebarLayout(
sidebarPanel(
uiOutput(
"scatter_ui"
)
)
)
),
# ----- Tab panel for the Choropleth Visual -----
tabPanel("Choropleth Visual"),
# ----- Tab panel for the conclusions on data -----
tabPanel("Conclusions")
)
)
)
runApp('HappyHour_app.R')
scatter_plot <- hh_data_modified %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
runApp('HappyHour_app.R')
selectInput(
"Select your region",
label = "Please choose the region you are interested in.",
choices = as.list(c(12, 13, 14))
)
library(shiny)
source("Data_Visualizations/HH_Scatter.R")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv", stringsAsFactors = FALSE)
output$scatter_ui <- renderUI({
selectInput(
"Select your region",
label = "Please choose the region you are interested in.",
choices = as.list(c(12, 13, 14))
)
})
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
runApp('HappyHour_app.R')
library(plotly)
library(dplyr)
source("HappyHour_server.R")
draw_hh_scatter <- function(hh_data) {
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita =
(Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)/100)
scatter_plot <- hh_data_modified %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
}
library(plotly)
library(dplyr)
source("HappyHour_server.R")
draw_hh_scatter <- function(hh_data) {
hh_data_modified <- hh_data %>%
mutate(Alcohol_PerCapita =
(Beer_PerCapita + Spirit_PerCapita + Wine_PerCapita)/100)
scatter_plot <- hh_data_modified %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~Alcohol_PerCapita,
y = ~HappinessScore
)
return(scatter_plot)
}
library(shiny); runApp('HappyHour_app.R')
setwd("~/lionel_info201hw01/info201AD-glen_coco/HappyHour")
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
scatter_choices <- c(unique(select(hh_data, Region)))
output$scatter_ui <- renderUI({
selectInput(
"Select your region",
label = "Please choose the region you are interested in.",
choices = as.list(c())
)
})
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
library(shiny)
source("Data_Visualizations/HH_Scatter.R")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv", stringsAsFactors = FALSE)
scatter_choices <- c(unique(select(hh_data, Region)))
output$scatter_ui <- renderUI({
selectInput(
"Select your region",
label = "Please choose the region you are interested in.",
choices = as.list(c())
)
})
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
runApp('HappyHour_app.R')
View(scatter_choices)
library(shiny)
source("Data_Visualizations/HH_Scatter.R")
HappyHour_server <- function(input, output) {
hh_data <- read.csv("data/HappinessAlcoholConsumption.csv", stringsAsFactors = FALSE)
scatter_choices <- unique(select(hh_data, Region))
output$scatter_ui <- renderUI({
selectInput(
"Select your region",
label = "Please choose the region you are interested in.",
choices = as.list(scatter_choices)
)
})
output$general_scatter <- renderPlotly({
draw_hh_scatter(hh_data)
})
}
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
runApp('HappyHour_app.R')
